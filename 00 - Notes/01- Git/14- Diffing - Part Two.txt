git diff <-------------------- Compare staging area with working directory
git diff --staged <------------- Compare last commit with staging area
________________________________________
numbers.txt
-----------
1
2
3
----------------------------------------------------------
git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
     modified:  colors.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
     numbers.txt

no changes added to commit (use "git add" and/or "git commit -a")

git add numbers.txt
git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file: numbers.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  
git diff --staged
diff --git a/numbers.txt b/numbers.txt (a <----- last commit, b <------ staging area)
new file mode 100644
index 000..ea
--- /dev/null <------------ last commit (there is no numbers.txt file in last commit ... null)
+++ b/numbers.txt <-------- staging area
@@ -0,0 +1,3 @@
+1
+2
+3

...

Press "Q"

git diff HEAD <----------- Compare the commit with working directory
-----------------------------
To see what you've changed but not yet staged, type "git diff" with no other arguments.
... compares what is in your working directory with what is in your staging area.
The result tells you the changes you've made that you haven't yet staged.
... what is still unstaged.


If you want to see what you've staged that will go into your next commit,
you can use "git diff --staged".
... compares your staged changes with your last commit.